USE sql_invoicing;
CREATE TABLE payments_audit
(
	client_id INT
	date	DATE
	amount	DECIMAL(9,2)
	action_type   VARCHAR(50)
	action_date  DATETIME
)



DELIMITER $$

DROP TRIGGER IF EXISTS payments_after_insert;

CREATE TRIGGER payments_after_insert
	AFTER INSERT ON payments
	FOR EACH ROW
BEGIN
	UPDATE invoices
	SET payment_total=payment_total+NEW.amount
	WHERE invoice_id=NEW.invoice_id;

	INSERT INTO payments_audit
  VALUES    (NEW.client_id,NEW.date,NEW.amount,'Insert',NOW());

END $$

DELIMITER ;


DROP TRIGGER IF EXISTS payment_after_delete

CREATE TRIGGER payment_after_delete
	AFTER DELETE ON payments
	FOR EACH ROW
BEGIN
	UPDATE invoices
	SET payment_total=payment_total - OLD.amount
	WHERE  invoice_id=NEW.invoice_id;


	INSERT INTO payments_audit
  VALUES    (OLD.client_id,OLD.date,OLD.amount,'Delete',NOW());

END $$

DELIMITER ;


INSERT INTO payments
VALUES (DEFAULT,5,3,'2019-01-01',10,1)

DELETE FROM  payments
WHERE payment_id=11

//It is a good practise to create general purpose audit tables



EVENTS:
   Events are a block of sql code (a task) that gets executed according to a schedule.
It can be executed once a month  or like every day at 10 am like wise
By using events we can automate tasks such as deleting stale data ,copying data from one table to archive table ,aggregating  data for generating reports.
Events are very powerful

//TURN ON MYSQL EVENT SCHEDULER
SHOW VARIABLES LIKE  'event%';
SET GLOBAL event_scheduler=OFF/ON;


DELIMITER $$

CREATE EVENT yearly_delete_stale_audit_rows
ON SCHEDULE
	--AT  '2019-05-01'  //once only executed
       EVERY 1 YEAR STARTS '2019-01-01' ENDS '2019-01-01'
//start and end dadtes are optional
DO BEGIN
	DELETE FROM payments_audit
	WHERE action_date <NOW () -INTERVAL 1 YEAR;
END $$
DELIMTER ;


//Viewing ,Dropping and Altering Events

SHOW EVENTS ;

SHOW EVENTS LIKE  'yearly%';

DROP EVENTS IF EXISTS yearly_delete_stale_audit_rows;

DELIMITER $$

ALTER EVENT yearly_delete_stale_audit_rows
ON SCHEDULE
	--AT  '2019-05-01'  //once only executed
       EVERY 6 MONTH STARTS '2019-01-01' ENDS '2019-01-01'
//start and end dadtes are optional
DO BEGIN
	DELETE FROM payments_audit
	WHERE action_date <NOW () -INTERVAL 6 MONTHS;
END $$
DELIMTER ;

//Disabling an event
ALTER EVENT yearly_delete_stale_audit_rows ENABLE

