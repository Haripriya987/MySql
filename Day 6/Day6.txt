//Insert , Delete  and  update Data

Inserting a row
INSERT INTO customers (
	
	last_name,
	first_name,
	birth_date,
	address,
	city,
	state)

VALUES (
	'Smith',
	'John',
	'1990-01-01',
	'ADDRESS',
	'city',
	'CA');


//Inserting multiple values

INSERT INTO shippers (name)
VALUES ('Shipper1'),
	('Shipper2'),
	('Shipper3')

//Products  Table
INSERT INTO products (
		
	name,
      
	 quantity_in_stock,
      
	  unit_price)
VALUES ('laptop',21,1.34),
	
('Toys',9,2.1),

	 ('balls',14,6.2);


//creating a copy of a table
If we create in this way mysql ignore AI and PK attributes.We have to give  values explicitly when we insert records in the new table.
1)create new table  AS
2)select statement from old table

CREATE TABLE orders_archived AS
SELECT * FROM orders  //it is sub query

Delete all the data from table we have to truncate.

2 way
INSERT INTO orders_archived
SELECT * FROM ORDERS
WHERE order_date < '2019-01-01'
	

//exercise

CREATE TABLE invoice_archived  AS

SELECT i.invoice_id,
		
	i.number,

	c.name AS client,

	i.invoice_total,

                 i.payment_total,
 
	   i.invoice_date,

                   i.due_date


FROM invoices i

JOIN clients c

USING (client_id)

WHERE payment_date IS NOT NULL

//Updating a single row
UPDATE invoices

SET payment_total=10,

  payment_date='2019-02-03'

WHERE invoice_id=1;    

//we can change the amount as 50 % in the form of Expression
UPDATE invoices

SET 
	
   payment_total=invoice_total*0.5,
   
   payment_date=due_date

WHERE invoice_id=3;    

//UPDATING MULTIPLE ROWS
UPDATE invoices

SET payment_total=invoice_total*0.5,
 
payment_date=due_date
  
WHERE client_id=3;    


//USING SUBQUERIES

UPDATE invoices

SET 
	
payment_total=invoice_total*0.1,
   
 payment_date=due_date

 WHERE client_id=

 (SELECT client_id

FROM clients

WHERE name='Myworks');

SET points=points+50

where birth_date < '1990-01-01';


UPDATE invoices

SET 
	
payment_total=invoice_total*0.5,
   
 payment_date=due_date
   
 WHERE client_id   IN
 (SELECT client_id
    FROM clients
    WHERE state IN('CA','NY'))
  

//UPDATING RECORD WITHOUT USING SUBQUERIES
UPDATE invoices

SET 

	payment_total=invoice_total*0.5,
   
 payment_date=due_date
   
 WHERE payment_date IS NULL
    
  
EXERCISE:
UPDATE  orders

SET comments='GOLD'

WHERE customer_id IN

(
SELECT customer_id

FROM customers

WHERE points>3000
);


-- DELETE RECORDS FROM TABLES

DELETE FROM invoices

WHERE client_id =
(
SELECT client_id
clients 
FROM clients

WHERE name='MyWorkS');